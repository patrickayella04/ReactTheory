[{"C:\\ReactTheory\\src\\index.js":"1","C:\\ReactTheory\\src\\App.js":"2","C:\\ReactTheory\\src\\components\\layout\\Alert.js":"3","C:\\ReactTheory\\src\\components\\users\\Users.js":"4","C:\\ReactTheory\\src\\components\\layout\\Navbar.js":"5","C:\\ReactTheory\\src\\components\\users\\Search.js":"6","C:\\ReactTheory\\src\\components\\layout\\Spinner.js":"7","C:\\ReactTheory\\src\\components\\users\\UserItem.js":"8","C:\\ReactTheory\\src\\components\\pages\\About.js":"9","C:\\ReactTheory\\src\\components\\users\\User.js":"10","C:\\ReactTheory\\src\\components\\repos\\Repos.js":"11","C:\\ReactTheory\\src\\components\\repos\\RepoItem.js":"12","C:\\ReactTheory\\src\\context\\github\\GithubState.js":"13","C:\\ReactTheory\\src\\context\\github\\githubContext.js":"14","C:\\ReactTheory\\src\\context\\types.js":"15","C:\\ReactTheory\\src\\context\\github\\githubReducer.js":"16","C:\\ReactTheory\\src\\context\\alert\\AlertState.js":"17","C:\\ReactTheory\\src\\context\\alert\\alertReducer.js":"18","C:\\ReactTheory\\src\\context\\alert\\alertContext.js":"19"},{"size":200,"mtime":1609065846646,"results":"20","hashOfConfig":"21"},{"size":1295,"mtime":1611720872337,"results":"22","hashOfConfig":"21"},{"size":457,"mtime":1611719303071,"results":"23","hashOfConfig":"21"},{"size":1177,"mtime":1611707461874,"results":"24","hashOfConfig":"21"},{"size":770,"mtime":1610980432957,"results":"25","hashOfConfig":"21"},{"size":1452,"mtime":1611719026873,"results":"26","hashOfConfig":"21"},{"size":322,"mtime":1610906732262,"results":"27","hashOfConfig":"21"},{"size":643,"mtime":1611150467246,"results":"28","hashOfConfig":"21"},{"size":270,"mtime":1610979498033,"results":"29","hashOfConfig":"21"},{"size":3857,"mtime":1611707704820,"results":"30","hashOfConfig":"21"},{"size":304,"mtime":1611705383717,"results":"31","hashOfConfig":"21"},{"size":386,"mtime":1611351470201,"results":"32","hashOfConfig":"21"},{"size":3313,"mtime":1611720892737,"results":"33","hashOfConfig":"21"},{"size":112,"mtime":1611618250533,"results":"34","hashOfConfig":"21"},{"size":303,"mtime":1611618981112,"results":"35","hashOfConfig":"21"},{"size":1270,"mtime":1611718255260,"results":"36","hashOfConfig":"21"},{"size":1526,"mtime":1611720448058,"results":"37","hashOfConfig":"21"},{"size":316,"mtime":1611719492688,"results":"38","hashOfConfig":"21"},{"size":110,"mtime":1611715806934,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1x8ppma",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\ReactTheory\\src\\index.js",[],["80","81"],"C:\\ReactTheory\\src\\App.js",[],"C:\\ReactTheory\\src\\components\\layout\\Alert.js",[],"C:\\ReactTheory\\src\\components\\users\\Users.js",[],"C:\\ReactTheory\\src\\components\\layout\\Navbar.js",[],"C:\\ReactTheory\\src\\components\\users\\Search.js",[],"C:\\ReactTheory\\src\\components\\layout\\Spinner.js",[],"C:\\ReactTheory\\src\\components\\users\\UserItem.js",[],"C:\\ReactTheory\\src\\components\\pages\\About.js",[],"C:\\ReactTheory\\src\\components\\users\\User.js",[],"C:\\ReactTheory\\src\\components\\repos\\Repos.js",[],"C:\\ReactTheory\\src\\components\\repos\\RepoItem.js",[],"C:\\ReactTheory\\src\\context\\github\\GithubState.js",[],"C:\\ReactTheory\\src\\context\\github\\githubContext.js",[],"C:\\ReactTheory\\src\\context\\types.js",[],"C:\\ReactTheory\\src\\context\\github\\githubReducer.js",["82"],"import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS,\r\n    \r\n\r\n} from '../types';\r\n\r\n// A reducer is just a function so we export a arrow function. \r\n\r\n// State is emmutable meaning we cannot re-assign it. Thus we use the spread operator (...state) to make a copy of whats in the current state, and THEN add in any new additions or changes to it.\r\nexport default(state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            };\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false,\r\n            };\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading: false\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\ReactTheory\\src\\context\\alert\\AlertState.js",[],"C:\\ReactTheory\\src\\context\\alert\\alertReducer.js",["83"],"C:\\ReactTheory\\src\\context\\alert\\alertContext.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":1,"nodeType":"90","endLine":48,"endColumn":3},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":15,"endColumn":3},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]